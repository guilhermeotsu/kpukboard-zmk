/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF_L 0
#define SYM_L 1
#define NUM_L 2
#define FUN_L 3

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
// &lt { quick_tap_ms = <-1>; };

/ {
    behaviors {
        ht: hold_tap_mods_standard {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_PREF";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        hm: home_row_tap_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_TAP_PREF";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        tdj: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <175>;
            bindings = <&kp J>, <&kp ESC>;
        };

    };

    keymap {
        compatible = "zmk,keymap";

// DEFAULT

/*
 *   dvorak
 *
 *   ` ' , . p y   f g c r l /   |
 *   = a o e u i   d h t n s -   |
 *     ; q j k x   b m w v z     |
 *
 *   йцукен
 *
 *   ё й ц у к е   н г ш щ з х   |
 *   ъ ф ы в а п   р о л д ж э   |
 *     я ч с м и   т ь б ю .     |
 */

        default_layer {
            bindings = <
                &kp GRAVE &kp Q   &kp W        &kp E       &kp R       &kp T         &kp Y            &kp U          &kp I            &kp O           &kp P     &kp LBKT
                &kp RBKT  &kp A   &kp S        &kp D       &kp F       &kp G         &kp H            &tdj           &kp K            &kp L           &kp SEMI  &kp QUOT
                          &kp Z   &hm LCTRL X  &hm LGUI C  &hm LALT V  &kp B         &kp N            &hm LALT M     &hm RGUI COMMA   &hm RCTRL DOT   &kp FSLH
                                            &lt NUM_L TAB  &ht LSHFT SPACE           &ht RSHFT ENTER  &lt SYM_L BKSP
                >;
        };


/*
 *   dvorak
 *
 *   [ ] { } +   * & a | ^   |
 *   < > ( ) _   - a a a $   |
 *   ~ ! @ \ #   = / % ? 3   |
 *
 *   йцукен
 *
 *   [ ] { } +   * ? а / :   |
 *   Ц У ( ) ъ   э а а а Э   |
 *   Ë ! " № \   х ; % Х 3   |
 */

        sym_layer {
            bindings = <
                &trans &kp MINUS        &kp EQUAL         &kp LS(MINUS)    &kp LS(PLUS)     &kp RBRC      &kp STAR  &kp LS(N7)       &kp UARW         &kp LS(BSLH)     &kp LS(N6) &trans
                &trans &kp LS(W)        &kp LS(E)         &kp LS(N9)       &kp LS(N0)       &kp LS(QUOT)  &kp QUOT  &kp LARW         &kp DARW         &kp RARW         &kp LS(N4) &trans
                       &kp TILDE        &hm LCTRL LS(N1)  &hm LGUI LS(N2)  &hm LALT BSLH    &kp LS(N3)    &kp RBKT  &hm LALT LBKT    &hm RGUI LS(N5)  &hm RCTRL LBRC   &mo FUN_L
                                                                               &trans &trans              &trans &trans
            >;
        };

/*
 *     ALT +
 *   v 7 8 9 +   * 7 8 9 %   |
 *   v 4 5 6 =   - 4 5 6 0   |
 *   v 1 2 3 \   / 1 2 3 .   |
 */

        num_layer {
            bindings = <
                &trans &kp LC(LA(LG(F3)))    &kp LA(N7)        &kp LA(N8)        &kp LA(N9)        &kp KP_PLUS           &kp KP_MULTIPLY  &kp N7       &kp N8       &kp N9        &kp LS(N5) &trans
                &trans &kp LC(LA(LG(F2)))    &kp LA(N4)        &kp LA(N5)        &kp LA(N6)        &kp KP_EQUAL          &kp KP_MINUS     &kp N4       &kp N5       &kp N6        &kp N0     &trans
                       &kp LC(LA(LG(F1)))    &hm LCTRL LA(N1)  &hm LGUI LA(N2)   &hm LALT LA(N3)   &kp BSLH              &kp KP_SLASH     &hm LALT N1  &hm RGUI N2  &hm RCTRL N3  &kp KP_DOT
                                                                                    &trans &trans                &trans &trans
            >;
        };

/*     F F F F
 *   b 7 8 9 2   v u a d x   |
 *   b 4 5 6 1   v a a a x   |
 *   b 1 2 3 0   m p p n x   |
 */

        fn_layer {
            bindings = <
                &trans &bt BT_SEL 0  &kp F7  &kp F8  &kp F9   &kp F12          &kp C_VOL_UP    &kp PG_UP   &kp UARW  &kp PG_DN   &trans &trans
                &trans &bt BT_SEL 1  &kp F4  &kp F5  &kp F6   &kp F11          &kp C_VOL_DN    &kp LARW    &kp DARW  &kp RARW    &trans &trans
                       &bt BT_CLR    &kp F1  &kp F2  &kp F3   &kp F10          &kp C_MUTE      &kp C_PREV  &kp C_PP  &kp C_NEXT  &trans
                                                        &trans &trans                      &trans &trans
            >;
        };

    };
};
